#include <bits/stdc++.h>
using namespace std;
#define FR(i, n) for (int i = 0; i < (n); ++i)

typedef vector<int> vi;

vi A;

int F(int l, int r, int s, int t) {
  if (r < l) return 0;

  if (t) {    
    int m = s + max(max(F(l + 1, r, A[l], t), F(l + 1, r, A[l], !t)),
		   max(F(l, r - 1, A[r], t), F(l, r - 1, A[r], !t)));
    cout << l << " " << r << ", max = " << m << endl;
    return m;
  }
  
  return s - max(max(F(l + 1, r, A[l], t), F(l + 1, r, A[l], !t)),
		 max(F(l, r - 1, A[r], t), F(l, r - 1, A[r], !t)));

}

int f(int l, int r, int i, int t, int s = 0) {

  // first call, ob check
  if (i >= A.size() || i < 0)
    return 0;

  if (!(l == 0 && r == A.size() - 1)) {
    // s = s + (A[i] * (t ? 1 : -1));
    s = A[i];
  } else
    s = 0;

    
  
  // end condition
  if (r < l)
    return A[i]; // * (t ? -1 : 1);

  // pass the index of the value we wish to 'add' to the score
  if (t) {
    int m = s + max(max(f(l, r - 1, r, t, s), f(l, r - 1, r, !t, s)),
		max(f(l + 1, r, l, t, s), f(l + 1, r, l, !t, s)));
    return m;
  }

  int m = s - min(min(f(l, r - 1, r, t, s), f(l, r - 1, r, !t, s)),
	      min(f(l + 1, r, l, t, s), f(l + 1, r, l, !t, s)));
  return m;
}


// if (t) {
//     int m = max(max(f(l, r - 1, r, t, s), f(l, r - 1, r, !t, s)),
// 		max(f(l + 1, r, l, t, s), f(l + 1, r, l, !t, s)));
//     return m;
//   }

//   int m = min(min(f(l, r - 1, r, t, s), f(l, r - 1, r, !t, s)),
// 	      min(f(l + 1, r, l, t, s), f(l + 1, r, l, !t, s)));
//   return m;
int main() {


  int n;
  while (cin >> n && n) {
    A.assign(n, 0);
    for (auto &x : A) cin >> x;

    int ans = F(0, A.size() - 1, 0, 1);
    cout << ans << endl;
  }
}
